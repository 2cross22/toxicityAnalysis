[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "toxicity-detection-system"
version = "1.0.0"
description = "A machine learning web application that detects toxic, obscene, and insulting content in text using a neural network model"
readme = "README.md"
requires-python = ">=3.12,<3.13"
license = {text = "MIT"}

keywords = ["machine-learning", "toxicity-detection", "flask", "tensorflow", "nlp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
]

dependencies = [
    "flask==3.1.1",
    "tensorflow==2.16.1",
    "scikit-learn==1.4.0",
    "pandas==2.2.0",
    "numpy==1.26.4",
    "joblib==1.3.2",
    "gunicorn==21.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/toxicity-detection-system"
Repository = "https://github.com/yourusername/toxicity-detection-system.git"
Issues = "https://github.com/yourusername/toxicity-detection-system/issues"

[project.scripts]
toxicity-detector = "app:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "venv*", "__pycache__*"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short" 
